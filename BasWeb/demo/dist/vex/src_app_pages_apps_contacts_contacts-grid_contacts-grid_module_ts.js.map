{"version":3,"file":"src_app_pages_apps_contacts_contacts-grid_contacts-grid_module_ts.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,kBAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgE;AAEzB;AACM;AACR;AACA;AACA;AACa;;;;;;;;;ICW3D,0EAAmF;;;IAAhD,iFAAiB;;;IACpD,0EAAuE;;;IAAnC,uFAAuB;;ADL1D,MAAM,qBAAqB;IAahC;QAVU,gBAAW,GAAG,IAAI,uDAAY,EAAiB,CAAC;QAChD,eAAU,GAAG,IAAI,uDAAY,EAAiB,CAAC;QAEzD,eAAU,GAAG,0EAAU,CAAC;QACxB,YAAO,GAAG,uEAAO,CAAC;QAClB,WAAM,GAAG,sEAAM,CAAC;QAChB,WAAM,GAAG,sEAAM,CAAC;QAChB,WAAM,GAAG,sEAAM,CAAC;QAChB,iBAAY,GAAG,6EAAY,CAAC;IAEZ,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,cAAc,CAAC,KAAiB,EAAE,SAAwB;QACxD,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAClC,CAAC;;0FArBU,qBAAqB;mHAArB,qBAAqB;QCdlC,yEAAkC;QAChC,yEAEe;QAFV,0IAAS,oCAA4B,IAAC;QAGzC,oEAAgE;QAEhE,wEAA4B;QAAA,uDAAmB;QAAA,4DAAK;QACpD,yEAAmC;QACjC,wEAA+E;QAC/E,uEAAM;QAAA,uDAAsB;QAAA,4DAAO;QACrC,4DAAM;QAEN,yEAAmC;QACjC,yEAA4E;QAC5E,wEAAM;QAAA,wDAAoB;QAAA,4DAAO;QACnC,4DAAM;QAEN,6EAAmH;QAA3G,oJAAS,uEAAmC,IAAC;QACnD,6HAAmF;QACnF,6HAAuE;QACzE,4DAAS;QACX,4DAAM;QAEN,0EAA+E;QAC7E,8EAA6D;QAC3D,2EAAwC;QAC1C,4DAAS;QAET,8EAA6D;QAC3D,2EAAuC;QACzC,4DAAS;QAET,8EAA6D;QAC3D,2EAAuC;QACzC,4DAAS;QACX,4DAAM;QACR,4DAAM;;QAhCG,0DAAyB;QAAzB,+KAAyB;QAEF,0DAAmB;QAAnB,8GAAmB;QAEpC,0DAAmB;QAAnB,gFAAmB;QACtB,0DAAsB;QAAtB,iHAAsB;QAInB,0DAAgB;QAAhB,6EAAgB;QACnB,0DAAoB;QAApB,+GAAoB;QAIf,0DAAsB;QAAtB,kHAAsB;QACtB,0DAAuB;QAAvB,qHAAuB;QAMxB,0DAAkB;QAAlB,+EAAkB;QAIlB,0DAAiB;QAAjB,8EAAiB;QAIjB,0DAAiB;QAAjB,8EAAiB;;;;;;;;;;;;;;;;;;;;;;;;;AChCc;AACmB;AACZ;AACE;AACG;AACJ;AACE;;AAelD,MAAM,kBAAkB;;oFAAlB,kBAAkB;+GAAlB,kBAAkB;mHAVpB;YACP,yDAAY;YACZ,gEAAU;YACV,kEAAgB;YAChB,qEAAe;YACf,iEAAa;YACb,mEAAe;SAChB;mIAGU,kBAAkB,mBAXd,2EAAqB,aAElC,yDAAY;QACZ,gEAAU;QACV,kEAAgB;QAChB,qEAAe;QACf,iEAAa;QACb,mEAAe,aAEP,2EAAqB;;;;;;;;;;;;;;;;;;;;ACnBc;AACC;AACkB;;;AAIlE,MAAM,MAAM,GAAc;IACxB;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,KAAK;KAClB;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,2EAAqB;QAChC,IAAI,EAAE;YACJ,cAAc,EAAE,IAAI;YACpB,oBAAoB,EAAE,KAAK;SAC5B;KACF;CACF,CAAC;AAMK,MAAM,yBAAyB;;kGAAzB,yBAAyB;sHAAzB,yBAAyB;0HAH3B,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY,EAAE,0DAAe;mIAE5B,yBAAyB,oFAF1B,yDAAY,EAAE,0DAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBmB;AACqB;AACS;AAC3B;AAC6B;AAE3B;AACM;AAEJ;AACJ;AACP;AACuB;AACK;AACM;AAErD;;;;;;;;;;;;;;;;;ICL3B,6EAMoB;IAClB,wDACF;IAAA,6DAAI;;;;IAND,iFAAuB;IAKxB,2DACF;IADE,0FACF;;;;IAgEJ,yFAIuC;IAJpB,yVAAe,0BAAmB,IAAC,8RACrB,yBAAkB,IADG;IAIf,6DAAoB;;;IADxC,iFAAS;;;IAbhC,2EAGmB;IACjB,2EAKkB;IAChB,sJAI2D;;IAC7D,6DAAM;IACR,6DAAM;;;IAfD,gFAAQ;IAW8B,2DAA8B;IAA9B,gKAA8B;;;IAMzE,2EAImC;IACjC,sEAA+D;IAC/D,0EAAqC;IAAA,6FAAiC;IAAA,6DAAK;IAC7E,6DAAM;;IAND,oFAAY;;AD9DZ,MAAM,qBAAqB;IA8ChC,YAAoB,MAAiB,EACjB,KAAqB;QADrB,WAAM,GAAN,MAAM,CAAW;QACjB,UAAK,GAAL,KAAK,CAAgB;QA7CzC,aAAQ,GAAG,+DAAY,CAAC;QACxB,sBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAC1C,oDAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,EAC/C,oDAAG,CAAC,cAAc,CAAC,EAAE;YACnB,QAAQ,cAAc,EAAE;gBACtB,KAAK,KAAK,CAAC,CAAC;oBACV,OAAO,+DAAY,CAAC;iBACrB;gBAED,KAAK,SAAS,CAAC,CAAC;oBACd,OAAO,sEAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;iBAC5C;gBAED,OAAO,CAAC,CAAC;oBACP,OAAO,EAAE,CAAC;iBACX;aACF;QACH,CAAC,CAAC,CACH,CAAC;QAEF,UAAK,GAAW;YACd;gBACE,KAAK,EAAE,cAAc;gBACrB,KAAK,EAAE,QAAQ;aAChB;YACD;gBACE,KAAK,EAAE,sBAAsB;gBAC7B,KAAK,EAAE,aAAa;aACrB;YACD;gBACE,KAAK,EAAE,SAAS;gBAChB,KAAK,EAAE,YAAY;aACpB;SACF,CAAC;QAEF,aAAQ,GAAG,wEAAQ,CAAC;QACpB,gBAAW,GAAG,4EAAW,CAAC;QAC1B,oBAAe,GAAG,gFAAe,CAAC;QAClC,iBAAY,GAAG,6EAAY,CAAC;QAC5B,eAAU,GAAG,0EAAU,CAAC;QAGxB,cAAS,GAAG,0DAAS,CAAC;IAGuB,CAAC;IAE9C,QAAQ,KAAI,CAAC;IAEb,WAAW,CAAC,EAAkB;QAC5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oGAAqB,EAAE;YACtC,IAAI,EAAE,EAAE,IAAI,IAAI;YAChB,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,EAAiB;QAC1B,MAAM,OAAO,GAAG,oEAAiB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAEpD,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,OAAO,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC;SACpC;IACH,CAAC;;0FAhEU,qBAAqB;oHAArB,qBAAqB;QChClC,0EAAsC;QACpC,0EAAqD;QACnD,0EAAkB;QAChB,yEAA4E;QAC5E,2EACsH;QACtH,yEAAmD;QACnD,6DAAO;QACL,2EAAiC;QAAA,oEAAQ;QAAA,6DAAO;QAClD,6DAAK;QAEL,0EAAiD;QAC/C,0EAA6D;QAC3D,gHAQI;QACN,6DAAM;QAEN,+EAA2G;QACzG,4EAAyC;QAC3C,6DAAS;QAET,+EAMsB;QACpB,4EAAgD;QAClD,6DAAS;QAET,+EAKsB;QACpB,4EAA6C;QAC/C,6DAAS;QAET,+EAOsB;QAPd,+IAAS,iBAAa,IAAC;QAQ7B,4EAA4C;QAC9C,6DAAS;QAET,+EAMsB;QANd,+IAAS,iBAAa,IAAC;QAO7B,2EAG+B;QAC/B,yEAAM;QAAA,wEAAW;QAAA,6DAAO;QAC1B,6DAAS;QACX,6DAAM;QACR,6DAAM;QACR,6DAAM;QAEN,qHAgBM;;QAEN,qHAOM;;QACR,6DAAM;;QAjGM,2DAAQ;QAAR,gFAAQ;QAEL,2DAAmB;QAAnB,iFAAmB;QAEpB,2DAAY;QAAZ,oFAAY;QAMI,2DAAQ;QAAR,+EAAQ;QAWlB,2DAAmB;QAAnB,iFAAmB;QAUnB,2DAA0B;QAA1B,wFAA0B;QAS1B,2DAAuB;QAAvB,qFAAuB;QAWvB,2DAAsB;QAAtB,oFAAsB;QAUvB,2DAAoB;QAApB,kFAAoB;QAU/B,2DAA4C;QAA5C,uKAA4C;QAkB5C,2DAA8C;QAA9C,yKAA8C;upDDrExC;YACV,4EAAY;YACZ,qFAAgB;YAChB,2EAAW;YACX,gFAAa;YACb,sFAAgB;SACjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE7B4C;AAE4B;AACT;AACX;AACC;AACF;AACK;AACA;AAC2B;AAC/B;AACM;AACyB;AACM;;AAoBrF,MAAM,kBAAkB;;oFAAlB,kBAAkB;+GAAlB,kBAAkB;mHAfpB;YACP,yDAAY;YACZ,oFAAyB;YACzB,iEAAa;YACb,kEAAgB;YAChB,gEAAU;YACV,sEAAe;YACf,sEAAe;YACf,8FAAkB;YAClB,kEAAa;YACb,wEAAgB;YAChB,8FAAkB;YAClB,uFAAe;SAChB;mIAEU,kBAAkB,mBAhBd,2EAAqB,aAElC,yDAAY;QACZ,oFAAyB;QACzB,iEAAa;QACb,kEAAgB;QAChB,gEAAU;QACV,sEAAe;QACf,sEAAe;QACf,8FAAkB;QAClB,kEAAa;QACb,wEAAgB;QAChB,8FAAkB;QAClB,uFAAe","sources":["./node_modules/@iconify/icons-ic/twotone-filter-list.js","./src/app/pages/apps/contacts/components/contacts-card/contacts-card.component.ts","./src/app/pages/apps/contacts/components/contacts-card/contacts-card.component.html","./src/app/pages/apps/contacts/components/contacts-card/contacts-card.module.ts","./src/app/pages/apps/contacts/contacts-grid/contacts-grid-routing.module.ts","./src/app/pages/apps/contacts/contacts-grid/contacts-grid.component.ts","./src/app/pages/apps/contacts/contacts-grid/contacts-grid.component.html","./src/app/pages/apps/contacts/contacts-grid/contacts-grid.module.ts"],"sourcesContent":["var data = {\n\t\"body\": \"<path d=\\\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\\\" fill=\\\"currentColor\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Contact } from '../../interfaces/contact.interface';\nimport icPhone from '@iconify/icons-ic/twotone-phone';\nimport icBusiness from '@iconify/icons-ic/twotone-business';\nimport icMail from '@iconify/icons-ic/twotone-mail';\nimport icChat from '@iconify/icons-ic/twotone-chat';\nimport icStar from '@iconify/icons-ic/twotone-star';\nimport icStarBorder from '@iconify/icons-ic/twotone-star-border';\n\n@Component({\n  selector: 'vex-contacts-card',\n  templateUrl: './contacts-card.component.html',\n  styleUrls: ['./contacts-card.component.scss']\n})\nexport class ContactsCardComponent implements OnInit {\n\n  @Input() contact: Contact;\n  @Output() openContact = new EventEmitter<Contact['id']>();\n  @Output() toggleStar = new EventEmitter<Contact['id']>();\n\n  icBusiness = icBusiness;\n  icPhone = icPhone;\n  icMail = icMail;\n  icChat = icChat;\n  icStar = icStar;\n  icStarBorder = icStarBorder;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  emitToggleStar(event: MouseEvent, contactId: Contact['id']) {\n    event.stopPropagation();\n    this.toggleStar.emit(contactId);\n  }\n}\n","<div class=\"card overflow-hidden\">\r\n  <div (click)=\"openContact.emit(contact.id)\"\r\n       class=\"p-4 text-center hover:bg-hover trans-ease-out cursor-pointer relative\"\r\n       matRipple>\r\n    <img [src]=\"contact?.imageSrc\" class=\"avatar h-24 w-24 mx-auto\">\r\n\r\n    <h2 class=\"title mb-1 mt-3\">{{ contact?.name }}</h2>\r\n    <div class=\"body-2 text-secondary\">\r\n      <ic-icon [icon]=\"icBusiness\" class=\"ltr:mr-1 rtl:ml-1\" inline=\"true\"></ic-icon>\r\n      <span>{{ contact?.company }}</span>\r\n    </div>\r\n\r\n    <div class=\"body-2 text-secondary\">\r\n      <ic-icon [icon]=\"icPhone\" class=\"ltr:mr-1 rtl:ml-1\" inline=\"true\"></ic-icon>\r\n      <span>{{ contact?.phone }}</span>\r\n    </div>\r\n\r\n    <button (click)=\"emitToggleStar($event, contact?.id)\" class=\"absolute top-2 right-2\" mat-icon-button type=\"button\">\r\n      <mat-icon *ngIf=\"contact?.starred\" [icIcon]=\"icStar\" class=\"text-amber\"></mat-icon>\r\n      <mat-icon *ngIf=\"!contact?.starred\" [icIcon]=\"icStarBorder\"></mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"bg-app-bar p-2\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n    <button class=\"text-secondary\" mat-icon-button type=\"button\">\r\n      <mat-icon [icIcon]=\"icPhone\"></mat-icon>\r\n    </button>\r\n\r\n    <button class=\"text-secondary\" mat-icon-button type=\"button\">\r\n      <mat-icon [icIcon]=\"icMail\"></mat-icon>\r\n    </button>\r\n\r\n    <button class=\"text-secondary\" mat-icon-button type=\"button\">\r\n      <mat-icon [icIcon]=\"icChat\"></mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContactsCardComponent } from './contacts-card.component';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\n\n@NgModule({\n  declarations: [ContactsCardComponent],\n  imports: [\n    CommonModule,\n    IconModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatIconModule,\n    MatRippleModule\n  ],\n  exports: [ContactsCardComponent]\n})\nexport class ContactsCardModule {\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { QuicklinkModule } from 'ngx-quicklink';\nimport { ContactsGridComponent } from './contacts-grid.component';\nimport { VexRoutes } from '../../../../../@vex/interfaces/vex-route.interface';\n\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    redirectTo: 'all'\n  },\n  {\n    path: ':activeCategory',\n    component: ContactsGridComponent,\n    data: {\n      scrollDisabled: true,\n      toolbarShadowEnabled: false\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule, QuicklinkModule]\n})\nexport class ContactsGridRoutingModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Link } from '../../../../../@vex/interfaces/link.interface';\nimport icContacts from '@iconify/icons-ic/twotone-contacts';\nimport { scaleIn400ms } from '../../../../../@vex/animations/scale-in.animation';\nimport { fadeInRight400ms } from '../../../../../@vex/animations/fade-in-right.animation';\nimport icPersonAdd from '@iconify/icons-ic/twotone-person-add';\nimport { ContactsEditComponent } from '../components/contacts-edit/contacts-edit.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport icFilterList from '@iconify/icons-ic/twotone-filter-list';\nimport icCloudDownload from '@iconify/icons-ic/twotone-cloud-download';\nimport { Contact } from '../interfaces/contact.interface';\nimport { contactsData } from '../../../../../static-data/contacts';\nimport { trackById } from '../../../../../@vex/utils/track-by';\nimport icSearch from '@iconify/icons-ic/twotone-search';\nimport { stagger40ms } from '../../../../../@vex/animations/stagger.animation';\nimport { fadeInUp400ms } from '../../../../../@vex/animations/fade-in-up.animation';\nimport { scaleFadeIn400ms } from '../../../../../@vex/animations/scale-fade-in.animation';\nimport { ActivatedRoute } from '@angular/router';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'vex-contacts-grid',\n  templateUrl: './contacts-grid.component.html',\n  styleUrls: ['./contacts-grid.component.scss'],\n  animations: [\n    scaleIn400ms,\n    fadeInRight400ms,\n    stagger40ms,\n    fadeInUp400ms,\n    scaleFadeIn400ms\n  ]\n})\nexport class ContactsGridComponent implements OnInit {\n\n  contacts = contactsData;\n  filteredContacts$ = this.route.paramMap.pipe(\n    map(paramMap => paramMap.get('activeCategory')),\n    map(activeCategory => {\n      switch (activeCategory) {\n        case 'all': {\n          return contactsData;\n        }\n\n        case 'starred': {\n          return contactsData.filter(c => c.starred);\n        }\n\n        default: {\n          return [];\n        }\n      }\n    })\n  );\n\n  links: Link[] = [\n    {\n      label: 'ALL CONTACTS',\n      route: '../all'\n    },\n    {\n      label: 'FREQUENTLY CONTACTED',\n      route: '../frequent'\n    },\n    {\n      label: 'STARRED',\n      route: '../starred'\n    }\n  ];\n\n  icSearch = icSearch;\n  icPersonAdd = icPersonAdd;\n  icCloudDownload = icCloudDownload;\n  icFilterList = icFilterList;\n  icContacts = icContacts;\n\n\n  trackById = trackById;\n\n  constructor(private dialog: MatDialog,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {}\n\n  openContact(id?: Contact['id']) {\n    this.dialog.open(ContactsEditComponent, {\n      data: id || null,\n      width: '600px'\n    });\n  }\n\n  toggleStar(id: Contact['id']) {\n    const contact = contactsData.find(c => c.id === id);\n\n    if (contact) {\n      contact.starred = !contact.starred;\n    }\n  }\n}\n","<div class=\"h-full\" fxLayout=\"column\">\n  <div class=\"p-6 pb-0 bg-card shadow-b\" fxFlex=\"none\">\n    <div vexContainer>\n      <h1 class=\"display-1 mt-0 mb-4\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n      <span @scaleIn\n            class=\"w-12 h-12 rounded-full text-primary ltr:mr-4 rtl:ml-4 flex items-center justify-center bg-primary-light\">\n      <ic-icon [icon]=\"icContacts\" size=\"24px\"></ic-icon>\n      </span>\n        <span @fadeInRight class=\"block\">Contacts</span>\n      </h1>\n\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <nav class=\"vex-tabs border-0\" fxFlex=\"auto\" mat-tab-nav-bar>\n          <a #rla=\"routerLinkActive\"\n             *ngFor=\"let link of links\"\n             [active]=\"rla.isActive\"\n             [disabled]=\"link.disabled\"\n             [routerLink]=\"link.route\"\n             mat-tab-link\n             routerLinkActive>\n            {{ link.label }}\n          </a>\n        </nav>\n\n        <button color=\"primary\" fxFlex=\"none\" fxHide.xs mat-icon-button matTooltip=\"Search Contacts\" type=\"button\">\n          <mat-icon [icIcon]=\"icSearch\"></mat-icon>\n        </button>\n\n        <button class=\"ltr:ml-1 rtl:mr-1\"\n                color=\"primary\"\n                fxFlex=\"none\"\n                fxHide.xs\n                mat-icon-button\n                matTooltip=\"Export Contacts\"\n                type=\"button\">\n          <mat-icon [icIcon]=\"icCloudDownload\"></mat-icon>\n        </button>\n\n        <button class=\"ltr:ml-1 rtl:mr-1\"\n                color=\"primary\"\n                fxFlex=\"none\"\n                mat-icon-button\n                matTooltip=\"Filter Contacts\"\n                type=\"button\">\n          <mat-icon [icIcon]=\"icFilterList\"></mat-icon>\n        </button>\n\n        <button (click)=\"openContact()\"\n                class=\"ltr:ml-1 rtl:mr-1\"\n                color=\"primary\"\n                fxFlex=\"none\"\n                fxHide.gt-xs\n                mat-mini-fab\n                matTooltip=\"Add Contact\"\n                type=\"button\">\n          <mat-icon [icIcon]=\"icPersonAdd\"></mat-icon>\n        </button>\n\n        <button (click)=\"openContact()\"\n                class=\"ltr:ml-4 rtl:mr-4\"\n                color=\"primary\"\n                fxFlex=\"none\"\n                fxHide.xs\n                mat-raised-button\n                type=\"button\">\n          <ic-icon [icon]=\"icPersonAdd\"\n                   class=\"ltr:mr-2 rtl:ml-2 ltr:-ml-1 rtl:-mr-1\"\n                   inline=\"true\"\n                   size=\"20px\"></ic-icon>\n          <span>ADD CONTACT</span>\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"(filteredContacts$ | async).length > 0\"\n       @stagger\n       class=\"overflow-y-auto\"\n       fxFlex=\"auto\">\n    <div class=\"p-gutter\"\n         vexContainer\n         gdColumns=\"1fr 1fr 1fr 1fr\"\n         gdColumns.lt-md=\"1fr 1fr\"\n         gdColumns.xs=\"1fr\"\n         gdGap=\"24px\">\n      <vex-contacts-card (openContact)=\"openContact($event)\"\n                         (toggleStar)=\"toggleStar($event)\"\n                         *ngFor=\"let contact of filteredContacts$ | async; trackBy: trackById\"\n                         @fadeInUp\n                         [contact]=\"contact\"></vex-contacts-card>\n    </div>\n  </div>\n\n  <div *ngIf=\"(filteredContacts$ | async).length === 0\"\n       @scaleFadeIn\n       fxFlex=\"auto\"\n       fxLayout=\"column\"\n       fxLayoutAlign=\"center center\">\n    <img class=\"m-12 h-64\" src=\"assets/img/illustrations/idea.svg\">\n    <h2 class=\"headline m-0 text-center\">No contacts matching your filters</h2>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ContactsGridRoutingModule } from './contacts-grid-routing.module';\nimport { ContactsGridComponent } from './contacts-grid.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { IconModule } from '@visurel/iconify-angular';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ContactsEditModule } from '../components/contacts-edit/contacts-edit.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ContactsCardModule } from '../components/contacts-card/contacts-card.module';\nimport { ContainerModule } from '../../../../../@vex/directives/container/container.module';\n\n\n@NgModule({\n  declarations: [ContactsGridComponent],\n  imports: [\n    CommonModule,\n    ContactsGridRoutingModule,\n    MatTabsModule,\n    FlexLayoutModule,\n    IconModule,\n    MatButtonModule,\n    MatDialogModule,\n    ContactsEditModule,\n    MatIconModule,\n    MatTooltipModule,\n    ContactsCardModule,\n    ContainerModule\n  ]\n})\nexport class ContactsGridModule {\n}\n"],"names":[],"sourceRoot":"webpack:///"}